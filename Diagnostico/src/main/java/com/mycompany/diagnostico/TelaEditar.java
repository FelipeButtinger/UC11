/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.diagnostico;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 05750329011
 */
public class TelaEditar extends javax.swing.JFrame {

   private List<String> sintomasDoenca = new ArrayList<>();
   private List<String> sintomasVerificar = new ArrayList<>();
   private List<String> sintomasRemover = new ArrayList<>();//array criada para remover sintomas 
     
    public TelaEditar() {
        initComponents();
         try {

        Connection conexao = conectarBanco();   
        String sql = "SELECT nome FROM doencas";       
        PreparedStatement pstmt = conexao.prepareStatement(sql);
        ResultSet rs = pstmt.executeQuery();
        
        List<String> doencas = new ArrayList<>();
        while (rs.next()) {//pega elemento por elemento da table
            String nomeDoenca = rs.getString("nome");
                cbbx.addItem(nomeDoenca);//Adicionando na comboBox
            System.out.println(nomeDoenca);
        }
         pstmt.close();
        conexao.close();
        
        
    } catch (SQLException ex) {
        Logger.getLogger(TelaCadastro.class.getName()).log(Level.SEVERE, null, ex);
    }
         try {

        Connection conexao = conectarBanco();   
        String sql = "SELECT nome FROM sintomas";       
        PreparedStatement pstmt = conexao.prepareStatement(sql);
        ResultSet rs = pstmt.executeQuery();
        
        List<String> sintomas = new ArrayList<>();
        while (rs.next()) {//pega elemento por elemento da table
            String nomeSintoma = rs.getString("nome");
                sintomas.add(nomeSintoma);//Adicionando em uma array para usos futuros
                cbbx1.addItem(nomeSintoma);//Adicionando na comboBox
            
        }
         pstmt.close();
        conexao.close();
        
        
    } catch (SQLException ex) {
        Logger.getLogger(TelaCadastro.class.getName()).log(Level.SEVERE, null, ex);
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cbbx1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnAdicionar = new javax.swing.JButton();
        txtNome = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtDefinicao = new javax.swing.JTextField();
        btnRemover = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtObservacoes = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTratamentos = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        cbbx = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel7.setText("Comente sobre as formas de tratamento.");

        cbbx1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Nome da Doença ou infecção:");

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        txtNome.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        JTable.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        JTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sintomas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(JTable);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Definição");

        txtDefinicao.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtDefinicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDefinicaoActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Observações");

        txtObservacoes.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtObservacoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtObservacoesActionPerformed(evt);
            }
        });

        jLabel4.setText("Explique em poucas palavras a Doença ou infecção.");

        txtTratamentos.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtTratamentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTratamentosActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Tratamentos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDefinicao))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNome))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(txtObservacoes, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(txtTratamentos, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(181, 181, 181)
                        .addComponent(cbbx1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdicionar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnRemover)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDefinicao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtObservacoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtTratamentos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbbx1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemover)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSalvar.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnSalvar.setText("Salvar alterações");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        cbbx.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cbbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbxActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel9.setText("Qual doença/infecção deseja editar?");

        jButton1.setText("voltar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(cbbx, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jLabel9))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(cbbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalvar)
                .addGap(55, 55, 55))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbxActionPerformed

         try {
        String nomeDoenca = cbbx.getSelectedItem().toString();//seleciona o nome da doença para os selects
        

        Connection conexao = conectarBanco();
        

        String sql = "SELECT nome, definicao, observacao, tratamentos " +
                     "FROM doencas " +
                     "WHERE nome = ?";//pega de uma vez tudo que vou utilizar(sem contar os sintomas)
        
        PreparedStatement pstmt = conexao.prepareStatement(sql);
        pstmt.setString(1, nomeDoenca);//preenche o ponto de interrogação
        ResultSet rs = pstmt.executeQuery();
        

       

            if (rs.next()) {

            txtNome.setText(rs.getString("nome"));
            txtDefinicao.setText(rs.getString("definicao"));
            txtObservacoes.setText(rs.getString("observacao"));
            txtTratamentos.setText(rs.getString("tratamentos"));//pega cada uma das informações que preciso, pegando a string de cada coluna e já preenche os campos.
        }
        
        

        String sqlSintomas = "SELECT sintoma.nome " +
                             "FROM sintomas sintoma " +
                             "JOIN sintomas_doencas sintomasDoencas ON sintoma.nome = sintomasDoencas.id_sintoma " +
                             "JOIN doencas doenca ON sintomasDoencas.id_doenca = doenca.nome " +
                             "WHERE doenca.nome = ?";//o select que pegara cada um dos sintomas
        
        PreparedStatement pstmtSintomas = conexao.prepareStatement(sqlSintomas);
        pstmtSintomas.setString(1, nomeDoenca);//preenche o ponto de interrogação.
        ResultSet rsSintomas = pstmtSintomas.executeQuery();
        

        DefaultTableModel model = (DefaultTableModel) JTable.getModel();
        model.setRowCount(0);//zera a tabela, para que quando ela for preenchida de nova, não haja cada vez mais rows
        

        while (rsSintomas.next()) {//pega cada sintoma conectado pela table sintomas_doencas e os insere na tabela do java.
            String nomeSintoma = rsSintomas.getString("nome");
            model.addRow(new Object[]{nomeSintoma});
        }
        

        rs.close();
        pstmt.close();
        rsSintomas.close();
        pstmtSintomas.close();
        conexao.close();
        
    } catch (SQLException ex) {
        Logger.getLogger(TelaEditar.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_cbbxActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        Object selecionado = cbbx1.getSelectedItem();
        String selecionadoConvertido = selecionado.toString();
        DefaultTableModel model = (DefaultTableModel) JTable.getModel();

        verificar(selecionado);


    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void txtDefinicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDefinicaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDefinicaoActionPerformed

    private void txtObservacoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtObservacoesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtObservacoesActionPerformed

    private void txtTratamentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTratamentosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTratamentosActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
                                                 
    try {
        String nomeDoenca = cbbx.getSelectedItem().toString();
        String nome = txtNome.getText();
        String definicao = txtDefinicao.getText();
        String observacoes = txtObservacoes.getText();
        String tratamentos = txtTratamentos.getText();
        
        try (Connection conexao = conectarBanco()) {
            // Atualizar a doença
            String sqlAlterar = "UPDATE doencas SET nome = ?, definicao = ?, observacao = ?, tratamentos = ? WHERE nome = ?";
            try (PreparedStatement pstmt = conexao.prepareStatement(sqlAlterar)) {
                pstmt.setString(1, nome);
                pstmt.setString(2, definicao);
                pstmt.setString(3, observacoes);
                pstmt.setString(4, tratamentos);
                pstmt.setString(5, nomeDoenca);
                pstmt.executeUpdate();
            }
            
            // Remover sintomas retirados da jTable
            for (String sintoma : sintomasRemover) {//cada sintoma da array
                String sqlDelete = "DELETE FROM sintomas_doencas WHERE id_sintoma = ? AND id_doenca = ?";
                try (PreparedStatement pstmt = conexao.prepareStatement(sqlDelete)) {
                    pstmt.setString(1, sintoma);
                    pstmt.setString(2, nomeDoenca);
                    pstmt.executeUpdate();
                }
            }
            
            // Adicionar novos sintomas
            for (String sintoma : sintomasDoenca) {
                String sqlInsert = "INSERT INTO sintomas_doencas (id_sintoma, id_doenca) VALUES (?, ?)";
                try (PreparedStatement pstmt = conexao.prepareStatement(sqlInsert)) {
                    pstmt.setString(1, sintoma);
                    pstmt.setString(2, nomeDoenca);
                    pstmt.executeUpdate();
                }
            }
        }
        
        JOptionPane.showMessageDialog(this, "Alterações salvas com sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        
         TelaMenu voltar = new TelaMenu();

        voltar.setVisible(true);
        this.dispose();
        
    } catch (SQLException ex) {
        Logger.getLogger(TelaEditar.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this, "Erro ao salvar alterações.", "Erro", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        int selectedRow = JTable.getSelectedRow();
 
        
        String valorLinha = JTable.getValueAt(selectedRow, 0).toString();//aqui eu capturo o valor da linha a ser removida para tirar da array que adiciona no banco de dados
        
    if (selectedRow != -1) {
        sintomasRemover.add(valorLinha);
        System.out.println(sintomasRemover.get(0));
        boolean removed = sintomasDoenca.remove(valorLinha);//Aqui é removido da arraylist
        
        DefaultTableModel model = (DefaultTableModel) JTable.getModel();
        model.removeRow(selectedRow);
        
       
        JOptionPane.showMessageDialog(this, "Linha deletada com sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
    } else {
        
        JOptionPane.showMessageDialog(this, "Por favor, selecione uma linha para deletar.", "Aviso", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        TelaMenu voltar = new TelaMenu();

        voltar.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param nome
     */
    public void verificar(Object nome){
         int rows = JTable.getRowCount();
    
    // Iterar pelas linhas da tabela
    for(int i = 0; i < rows; i++){
        // Obter o valor da célula na coluna 0 da linha atual
        Object valorCelula = JTable.getValueAt(i, 0);
        
        // Comparar o valor atual com o nome recebido
        if(nome.equals(valorCelula)){
            JOptionPane.showMessageDialog(null,
  "Sintoma já adicionado na doença.",
  "Warning",
  JOptionPane.WARNING_MESSAGE);
            return; // Se já existe, não precisa adicionar novamente
        }
    }
    
    // Se chegou aqui, significa que o sintoma não está na tabela
    DefaultTableModel model = (DefaultTableModel) JTable.getModel();
    model.addRow(new Object[]{nome}); // Adicionar o novo sintoma na tabela
    
    sintomasDoenca.add(nome.toString()); // Adicionar o novo sintoma na lista
        System.out.println(sintomasDoenca);
    }
     public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaEditar().setVisible(true);
            }
        });
    }
private Connection conectarBanco() throws SQLException {
        String url = "jdbc:mysql://localhost:3306/diagnosticoJava";
        String usuario = "root";
        String senha = "root";
        return DriverManager.getConnection(url,usuario,senha);
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTable;
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> cbbx;
    private javax.swing.JComboBox<String> cbbx1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtDefinicao;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtObservacoes;
    private javax.swing.JTextField txtTratamentos;
    // End of variables declaration//GEN-END:variables
}
